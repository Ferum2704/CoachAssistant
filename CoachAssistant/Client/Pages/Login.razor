@page "/login"

<MudPaper Style="height: 100vh; width: 100vw; background: url('/images/login.png') no-repeat fixed; overflow: hidden; background-size: cover; display: flex; align-items: center; justify-content: center;" Elevation="0">
    <MudContainer Style="background-color: rgba(0, 0, 0, 0.6); padding: 2rem; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); max-width: 600px; max-height: 50vh; overflow: hidden;">
        <MudText Typo="Typo.h3" Style="color: white; text-align: center; margin-bottom: 20px;">Вітаємо в Team Assistant!</MudText>
        <EditForm Model="@user" OnValidSubmit="LoginUser">
            <MudGrid Justify="Justify.Center" Style="align-items: center" Spacing="2">
                <MudItem xs="12" sm="12" md="12">
                    <MudTextField @bind-Value="user.Username" Label="Юзернейм" Variant="Variant.Outlined" FullWidth Style="margin-bottom: 20px; background-color: rgba(255, 255, 255, 0.8);" />
                     <MudTextField @bind-Value="user.Password" Label="Пароль" Variant="Variant.Outlined" FullWidth InputType="InputType.Password" Style="margin-bottom: 20px; background-color: rgba(255, 255, 255, 0.8);" />
                     <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" FullWidth Style="margin-bottom: 10px;">Увійти</MudButton>
                     <MudButton Variant="Variant.Filled" Color="Color.Secondary" FullWidth OnClick="@NavigateToRegister" Class="mt-2">Зареєструватися</MudButton>
                </MudItem>
            </MudGrid>
        </EditForm>
    </MudContainer>
</MudPaper>

@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject IHttpClientService HttpClientService
@inject ICurrentTeamProvider CurrentTeamProvider
@inject IAccountManager AccountManager
@inject SignalRService SignalRService

 @code {
    LoginModel user = new();

    async Task LoginUser(EditContext context)
    {
        var identityModel = await HttpClientService.PostAsync<LoginModel, IdentityModel>(ApiUrls.LoginUrl, user);

        await LocalStorage.SetItemAsync($"{nameof(identityModel.Tokens.AccessToken)}", identityModel.Tokens.AccessToken);
        await LocalStorage.SetItemAsync($"{nameof(identityModel.Tokens.RefreshToken)}", identityModel.Tokens.RefreshToken);
        await LocalStorage.SetItemAsync($"{nameof(identityModel.DomainUserId)}", identityModel.DomainUserId);

        await AuthStateProvider.GetAuthenticationStateAsync();

        await SignalRService.StartConnectionAsync();

        NavigationManager.NavigateTo("/", true);
    }

    void NavigateToRegister() => NavigationManager.NavigateTo("/register");
}
